{"ast":null,"code":"var _jsxFileName = \"D:\\\\usx-tienda\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n\n  // Cargar el estado de autenticación desde el localStorage\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      setUser({\n        token\n      }); // Puedes expandir esto con datos adicionales del usuario\n    }\n  }, []);\n\n  // Función para manejar el login\n  const login = token => {\n    localStorage.setItem('token', token); // Guardar el token en localStorage\n    setUser({\n      token\n    }); // Actualizar el estado del usuario\n  };\n\n  // Función para manejar el logout\n  const logout = () => {\n    localStorage.removeItem('token'); // Eliminar el token del localStorage\n    setUser(null); // Reiniciar el estado del usuario\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");\n_c = AuthProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","token","localStorage","getItem","login","setItem","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/usx-tienda/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [user, setUser] = useState(null);\r\n\r\n    // Cargar el estado de autenticación desde el localStorage\r\n    useEffect(() => {\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n            setUser({ token }); // Puedes expandir esto con datos adicionales del usuario\r\n        }\r\n    }, []);\r\n\r\n    // Función para manejar el login\r\n    const login = (token) => {\r\n        localStorage.setItem('token', token); // Guardar el token en localStorage\r\n        setUser({ token }); // Actualizar el estado del usuario\r\n    };\r\n\r\n    // Función para manejar el logout\r\n    const logout = () => {\r\n        localStorage.removeItem('token'); // Eliminar el token del localStorage\r\n        setUser(null); // Reiniciar el estado del usuario\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ user, login, logout }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport default AuthContext;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;;EAEtC;EACAC,SAAS,CAAC,MAAM;IACZ,MAAMS,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAIF,KAAK,EAAE;MACPD,OAAO,CAAC;QAAEC;MAAM,CAAC,CAAC,CAAC,CAAC;IACxB;EACJ,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMG,KAAK,GAAIH,KAAK,IAAK;IACrBC,YAAY,CAACG,OAAO,CAAC,OAAO,EAAEJ,KAAK,CAAC,CAAC,CAAC;IACtCD,OAAO,CAAC;MAAEC;IAAM,CAAC,CAAC,CAAC,CAAC;EACxB,CAAC;;EAED;EACA,MAAMK,MAAM,GAAGA,CAAA,KAAM;IACjBJ,YAAY,CAACK,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC;IAClCP,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;EACnB,CAAC;EAED,oBACIN,OAAA,CAACC,WAAW,CAACa,QAAQ;IAACC,KAAK,EAAE;MAAEV,IAAI;MAAEK,KAAK;MAAEE;IAAO,CAAE;IAAAT,QAAA,EAChDA;EAAQ;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAACf,EAAA,CA5BWF,YAAY;AAAAkB,EAAA,GAAZlB,YAAY;AA8BzB,eAAeD,WAAW;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}