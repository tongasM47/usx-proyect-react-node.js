{"ast":null,"code":"import React,{createContext,useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);// Cargar el estado de autenticación desde el localStorage\nuseEffect(()=>{const token=localStorage.getItem('token');if(token){setUser({token});// Puedes expandir esto con datos adicionales del usuario\n}},[]);// Función para manejar el login\nconst login=token=>{localStorage.setItem('token',token);// Guardar el token en localStorage\nsetUser({token});// Actualizar el estado del usuario\n};// Función para manejar el logout\nconst logout=()=>{localStorage.removeItem('token');// Eliminar el token del localStorage\nsetUser(null);// Reiniciar el estado del usuario\n};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{user,login,logout},children:children});};export default AuthContext;","map":{"version":3,"names":["React","createContext","useState","useEffect","jsx","_jsx","AuthContext","AuthProvider","_ref","children","user","setUser","token","localStorage","getItem","login","setItem","logout","removeItem","Provider","value"],"sources":["D:/usx-tienda/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [user, setUser] = useState(null);\r\n\r\n    // Cargar el estado de autenticación desde el localStorage\r\n    useEffect(() => {\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n            setUser({ token }); // Puedes expandir esto con datos adicionales del usuario\r\n        }\r\n    }, []);\r\n\r\n    // Función para manejar el login\r\n    const login = (token) => {\r\n        localStorage.setItem('token', token); // Guardar el token en localStorage\r\n        setUser({ token }); // Actualizar el estado del usuario\r\n    };\r\n\r\n    // Función para manejar el logout\r\n    const logout = () => {\r\n        localStorage.removeItem('token'); // Eliminar el token del localStorage\r\n        setUser(null); // Reiniciar el estado del usuario\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ user, login, logout }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport default AuthContext;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAElE,KAAM,CAAAC,WAAW,cAAGL,aAAa,CAAC,CAAC,CAEnC,MAAO,MAAM,CAAAM,YAAY,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACrC,KAAM,CAACE,IAAI,CAAEC,OAAO,CAAC,CAAGT,QAAQ,CAAC,IAAI,CAAC,CAEtC;AACAC,SAAS,CAAC,IAAM,CACZ,KAAM,CAAAS,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAC3C,GAAIF,KAAK,CAAE,CACPD,OAAO,CAAC,CAAEC,KAAM,CAAC,CAAC,CAAE;AACxB,CACJ,CAAC,CAAE,EAAE,CAAC,CAEN;AACA,KAAM,CAAAG,KAAK,CAAIH,KAAK,EAAK,CACrBC,YAAY,CAACG,OAAO,CAAC,OAAO,CAAEJ,KAAK,CAAC,CAAE;AACtCD,OAAO,CAAC,CAAEC,KAAM,CAAC,CAAC,CAAE;AACxB,CAAC,CAED;AACA,KAAM,CAAAK,MAAM,CAAGA,CAAA,GAAM,CACjBJ,YAAY,CAACK,UAAU,CAAC,OAAO,CAAC,CAAE;AAClCP,OAAO,CAAC,IAAI,CAAC,CAAE;AACnB,CAAC,CAED,mBACIN,IAAA,CAACC,WAAW,CAACa,QAAQ,EAACC,KAAK,CAAE,CAAEV,IAAI,CAAEK,KAAK,CAAEE,MAAO,CAAE,CAAAR,QAAA,CAChDA,QAAQ,CACS,CAAC,CAE/B,CAAC,CAED,cAAe,CAAAH,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}