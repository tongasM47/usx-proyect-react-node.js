{"ast":null,"code":"var _jsxFileName = \"D:\\\\usx-tienda\\\\src\\\\pages\\\\CategoryPage\\\\CategoryPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './CategoryPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CategoryPage = () => {\n  _s();\n  const {\n    category\n  } = useParams(); // Obtener la categoría de los parámetros de la URL\n  const [products, setProducts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchProducts = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/api/products?category=${category}`);\n        const data = await response.json();\n        if (response.ok) {\n          setProducts(data);\n        } else {\n          console.error('Error al obtener los productos:', data.message);\n        }\n      } catch (error) {\n        console.error('Error al conectar con el servidor:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchProducts();\n  }, [category]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Cargando productos...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"category-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Productos de la categor\\xEDa: \", category]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-list\",\n      children: products.length > 0 ? products.map(product => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"product-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: product.image,\n          alt: product.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: product.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [product.price, \" USD\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 29\n        }, this)]\n      }, product._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No hay productos disponibles en esta categor\\xEDa.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(CategoryPage, \"687D0B9uHs1tSs0MEx3jjjmvtWI=\", false, function () {\n  return [useParams];\n});\n_c = CategoryPage;\nexport default CategoryPage;\nvar _c;\n$RefreshReg$(_c, \"CategoryPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","CategoryPage","_s","category","products","setProducts","loading","setLoading","fetchProducts","response","fetch","data","json","ok","console","error","message","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","map","product","src","image","alt","name","price","_id","_c","$RefreshReg$"],"sources":["D:/usx-tienda/src/pages/CategoryPage/CategoryPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport './CategoryPage.css';\r\n\r\nconst CategoryPage = () => {\r\n    const { category } = useParams(); // Obtener la categoría de los parámetros de la URL\r\n    const [products, setProducts] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const fetchProducts = async () => {\r\n            try {\r\n                const response = await fetch(`http://localhost:5000/api/products?category=${category}`);\r\n                const data = await response.json();\r\n                if (response.ok) {\r\n                    setProducts(data);\r\n                } else {\r\n                    console.error('Error al obtener los productos:', data.message);\r\n                }\r\n            } catch (error) {\r\n                console.error('Error al conectar con el servidor:', error);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchProducts();\r\n    }, [category]);\r\n\r\n    if (loading) {\r\n        return <p>Cargando productos...</p>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"category-page\">\r\n            <h2>Productos de la categoría: {category}</h2>\r\n            <div className=\"product-list\">\r\n                {products.length > 0 ? (\r\n                    products.map((product) => (\r\n                        <div key={product._id} className=\"product-card\">\r\n                            <img src={product.image} alt={product.name} />\r\n                            <h3>{product.name}</h3>\r\n                            <p>{product.price} USD</p>\r\n                        </div>\r\n                    ))\r\n                ) : (\r\n                    <p>No hay productos disponibles en esta categoría.</p>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CategoryPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}