{"ast":null,"code":"import _objectSpread from\"D:/usx-tienda/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useContext}from'react';import{useNavigate}from'react-router-dom';// Para redirigir tras el inicio de sesión\nimport AuthContext from'../../context/AuthContext';// Importar contexto de autenticación\nimport'./Login.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Login=()=>{const navigate=useNavigate();// Instancia para redirigir\nconst{login}=useContext(AuthContext);// Obtener la función login del contexto\nconst[formData,setFormData]=useState({email:'',password:''});const[message,setMessage]=useState('');// Para manejar mensajes de éxito/error\n// Manejar cambios en los inputs\nconst handleChange=e=>{const{name,value}=e.target;setFormData(_objectSpread(_objectSpread({},formData),{},{[name]:value}));};// Manejar el envío del formulario\nconst handleSubmit=async e=>{e.preventDefault();try{const response=await fetch('http://localhost:5000/api/users/login',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(formData)});const data=await response.json();if(response.ok){login(data.token);// Actualizar el estado global con el token\nsetMessage('Inicio de sesión exitoso. Redirigiendo...');setTimeout(()=>{navigate('/');// Redirige a la página principal o perfil\n},2000);// Retraso opcional\n}else{setMessage(data.message||'Error al iniciar sesión.');}}catch(error){setMessage('Error al conectar con el servidor.');}};return/*#__PURE__*/_jsxs(\"div\",{className:\"login-page\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Inicio de Sesi\\xF3n\"}),message&&/*#__PURE__*/_jsx(\"p\",{className:\"message\",children:message}),/*#__PURE__*/_jsxs(\"form\",{className:\"login-form\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Email\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",name:\"email\",value:formData.email,onChange:handleChange,required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Contrase\\xF1a\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",name:\"password\",value:formData.password,onChange:handleChange,required:true})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Iniciar Sesi\\xF3n\"})]})]});};export default Login;","map":{"version":3,"names":["React","useState","useContext","useNavigate","AuthContext","jsx","_jsx","jsxs","_jsxs","Login","navigate","login","formData","setFormData","email","password","message","setMessage","handleChange","e","name","value","target","_objectSpread","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","ok","token","setTimeout","error","className","children","onSubmit","type","onChange","required"],"sources":["D:/usx-tienda/src/pages/Login/Login.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport { useNavigate } from 'react-router-dom'; // Para redirigir tras el inicio de sesión\r\nimport AuthContext from '../../context/AuthContext'; // Importar contexto de autenticación\r\nimport './Login.css';\r\n\r\nconst Login = () => {\r\n    const navigate = useNavigate(); // Instancia para redirigir\r\n    const { login } = useContext(AuthContext); // Obtener la función login del contexto\r\n    const [formData, setFormData] = useState({\r\n        email: '',\r\n        password: '',\r\n    });\r\n    const [message, setMessage] = useState(''); // Para manejar mensajes de éxito/error\r\n\r\n    // Manejar cambios en los inputs\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData({ ...formData, [name]: value });\r\n    };\r\n\r\n    // Manejar el envío del formulario\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            const response = await fetch('http://localhost:5000/api/users/login', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(formData),\r\n            });\r\n\r\n            const data = await response.json();\r\n\r\n            if (response.ok) {\r\n                login(data.token); // Actualizar el estado global con el token\r\n                setMessage('Inicio de sesión exitoso. Redirigiendo...');\r\n                setTimeout(() => {\r\n                    navigate('/'); // Redirige a la página principal o perfil\r\n                }, 2000); // Retraso opcional\r\n            } else {\r\n                setMessage(data.message || 'Error al iniciar sesión.');\r\n            }\r\n        } catch (error) {\r\n            setMessage('Error al conectar con el servidor.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"login-page\">\r\n            <h2>Inicio de Sesión</h2>\r\n            {message && <p className=\"message\">{message}</p>}\r\n            <form className=\"login-form\" onSubmit={handleSubmit}>\r\n                <div className=\"form-group\">\r\n                    <label>Email</label>\r\n                    <input\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        value={formData.email}\r\n                        onChange={handleChange}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>Contraseña</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        value={formData.password}\r\n                        onChange={handleChange}\r\n                        required\r\n                    />\r\n                </div>\r\n                <button type=\"submit\">Iniciar Sesión</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}