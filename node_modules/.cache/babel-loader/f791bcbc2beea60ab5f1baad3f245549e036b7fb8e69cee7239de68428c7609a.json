{"ast":null,"code":"import _objectSpread from\"D:/usx-tienda/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useContext,useEffect,useState}from'react';import AuthContext from'../../context/AuthContext';// Importar el contexto de autenticación\nimport'./Profile.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const Profile=()=>{const{user}=useContext(AuthContext);// Obtener datos del usuario desde el contexto\nconst[userData,setUserData]=useState(null);const[editMode,setEditMode]=useState(false);// Modo de edición\nconst[formData,setFormData]=useState({name:'',email:''});// Obtener datos del usuario desde el backend\nuseEffect(()=>{const fetchUserData=async()=>{try{const response=await fetch('http://localhost:5000/api/users/profile',{headers:{Authorization:\"Bearer \".concat(user.token)}});const data=await response.json();if(response.ok){setUserData(data);setFormData({name:data.name,email:data.email});}}catch(error){console.error('Error al obtener los datos del usuario:',error);}};if(user)fetchUserData();},[user]);// Manejar cambios en los inputs\nconst handleChange=e=>{const{name,value}=e.target;setFormData(_objectSpread(_objectSpread({},formData),{},{[name]:value}));};// Manejar envío del formulario para actualizar datos\nconst handleSubmit=async e=>{e.preventDefault();try{const response=await fetch('http://localhost:5000/api/users/profile',{method:'PUT',headers:{'Content-Type':'application/json',Authorization:\"Bearer \".concat(user.token)},body:JSON.stringify(formData)});const data=await response.json();if(response.ok){setUserData(data);setEditMode(false);// Salir del modo de edición\n}else{console.error('Error al actualizar los datos del usuario:',data.message);}}catch(error){console.error('Error al conectar con el servidor:',error);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"profile-page\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Perfil del Usuario\"}),userData?/*#__PURE__*/_jsx(_Fragment,{children:editMode?/*#__PURE__*/_jsxs(\"form\",{className:\"profile-form\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Nombre\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"name\",value:formData.name,onChange:handleChange})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Email\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",name:\"email\",value:formData.email,onChange:handleChange})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Guardar Cambios\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>setEditMode(false),children:\"Cancelar\"})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"profile-info\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Nombre:\"}),\" \",userData.name]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Email:\"}),\" \",userData.email]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setEditMode(true),children:\"Editar Perfil\"})]})}):/*#__PURE__*/_jsx(\"p\",{children:\"Cargando datos del usuario...\"})]});};export default Profile;","map":{"version":3,"names":["React","useContext","useEffect","useState","AuthContext","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Profile","user","userData","setUserData","editMode","setEditMode","formData","setFormData","name","email","fetchUserData","response","fetch","headers","Authorization","concat","token","data","json","ok","error","console","handleChange","e","value","target","_objectSpread","handleSubmit","preventDefault","method","body","JSON","stringify","message","className","children","onSubmit","type","onChange","onClick"],"sources":["D:/usx-tienda/src/pages/Profile/Profile.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport AuthContext from '../../context/AuthContext'; // Importar el contexto de autenticación\r\nimport './Profile.css';\r\n\r\nconst Profile = () => {\r\n    const { user } = useContext(AuthContext); // Obtener datos del usuario desde el contexto\r\n    const [userData, setUserData] = useState(null);\r\n    const [editMode, setEditMode] = useState(false); // Modo de edición\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        email: '',\r\n    });\r\n\r\n    // Obtener datos del usuario desde el backend\r\n    useEffect(() => {\r\n        const fetchUserData = async () => {\r\n            try {\r\n                const response = await fetch('http://localhost:5000/api/users/profile', {\r\n                    headers: {\r\n                        Authorization: `Bearer ${user.token}`,\r\n                    },\r\n                });\r\n                const data = await response.json();\r\n                if (response.ok) {\r\n                    setUserData(data);\r\n                    setFormData({ name: data.name, email: data.email });\r\n                }\r\n            } catch (error) {\r\n                console.error('Error al obtener los datos del usuario:', error);\r\n            }\r\n        };\r\n\r\n        if (user) fetchUserData();\r\n    }, [user]);\r\n\r\n    // Manejar cambios en los inputs\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setFormData({ ...formData, [name]: value });\r\n    };\r\n\r\n    // Manejar envío del formulario para actualizar datos\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await fetch('http://localhost:5000/api/users/profile', {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${user.token}`,\r\n                },\r\n                body: JSON.stringify(formData),\r\n            });\r\n\r\n            const data = await response.json();\r\n            if (response.ok) {\r\n                setUserData(data);\r\n                setEditMode(false); // Salir del modo de edición\r\n            } else {\r\n                console.error('Error al actualizar los datos del usuario:', data.message);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error al conectar con el servidor:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"profile-page\">\r\n            <h2>Perfil del Usuario</h2>\r\n            {userData ? (\r\n                <>\r\n                    {editMode ? (\r\n                        <form className=\"profile-form\" onSubmit={handleSubmit}>\r\n                            <div className=\"form-group\">\r\n                                <label>Nombre</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name=\"name\"\r\n                                    value={formData.name}\r\n                                    onChange={handleChange}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Email</label>\r\n                                <input\r\n                                    type=\"email\"\r\n                                    name=\"email\"\r\n                                    value={formData.email}\r\n                                    onChange={handleChange}\r\n                                />\r\n                            </div>\r\n                            <button type=\"submit\">Guardar Cambios</button>\r\n                            <button type=\"button\" onClick={() => setEditMode(false)}>\r\n                                Cancelar\r\n                            </button>\r\n                        </form>\r\n                    ) : (\r\n                        <div className=\"profile-info\">\r\n                            <p><strong>Nombre:</strong> {userData.name}</p>\r\n                            <p><strong>Email:</strong> {userData.email}</p>\r\n                            <button onClick={() => setEditMode(true)}>Editar Perfil</button>\r\n                        </div>\r\n                    )}\r\n                </>\r\n            ) : (\r\n                <p>Cargando datos del usuario...</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}